*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*
  don't use universal setting, but use inherit
  box-sizing: border-box;
  */
  box-sizing: inherit; }

html {
  /*
  for easy rem calculation. 
  but, specifying it px is not a good practice because this will impact user setting.
  instead, use percentage.
  font-size: 10px;
  */
  font-size: 62.5%; }

body {
  padding: 0rem;
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translate(-10rem); }
  50% {
    transform: rotate(180deg); }
  80% {
    transform: translate(0.5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translate(10rem); }
  /*
  80% {
    transform: translate(-.5rem);
  }
  */
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1rem; }

.u-margin-bottom-medium {
  margin-bottom: 2rem; }

.u-margin-bottom-large {
  margin-bottom: 4rem; }

.gradation-effect {
  background-image: linear-gradient(to right, darkgreen, lightgreen);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.7rem;
  line-height: 1.5;
  color: #777; }

.heading-1 {
  color: white;
  /*
  text-transform: uppercase;
  */
  /* to remove little bit of shaking at the end of animation */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-1--main {
    display: block;
    font-size: 5rem;
    font-weigth: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*
    * do animation three times 
    animation-iteration-count: 3;
    */
    /*
    * animation starts after 1 second
    animation-delay: 1s;
    */ }
  .heading-1--sub {
    display: block;
    font-size: 1.5rem;
    font-weight: 500;
    letter-spacing: 1.3rem;
    animation: moveInRight 2s ease-out; }

.heading-2 {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, darkgreen, lightgreen);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s; }
  .heading-2:hover {
    transform: skewY(2deg) skewX(20deg);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.3); }

.heading-3 {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.section-about {
  background-color: #f8f1f1;
  padding: 10em 0;
  margin-top: -10vh; }

.section-streamers {
  padding: 10rem 0;
  background-image: linear-gradient(to right bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.8)), url(../img/streamingwar.png);
  background-size: cover; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  /* padding top right bottom left */
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 1rem;
  transition: all 0.2s;
  position: relative; }

.btn:hover {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
  transform: translateY(-0.3rem);
  /* box-shadow: none|h-offset v-offset blur spread color |inset|initial|inherit; */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3); }
  .btn:hover::after {
    transform: scaleX(1.2) scaleY(1.4);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem); }

.btn:after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 1rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards; }

.btn--white {
  background-color: #fff;
  color: #777;
  /*
    In CSS, ::after creates a pseudo-element that is the last child of the selected element. 
    It is often used to add cosmetic content to an element with the content property. 
    It is inline by default.
    */ }
  .btn--white::after {
    background-color: #fff; }

.btn-text:link, .btn-text:visited {
  /*
    font-size: $default-font-size;
    color: blueviolet;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid lightgreen;
    padding: 3px;
    */
  text-transform: uppercase;
  text-decoration: none;
  /* padding top right bottom left */
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 1rem;
  transition: all 0.2s;
  position: relative;
  padding: 3px; }

.btn-text:hover {
  background-color: lightgreen;
  color: white;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transfor: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transfor: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.3);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid lightgreen;
      transform: scale(1.1);
      box-shadow: 0 2.5rm 4 rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%; }

.streamer-box {
  height: 20rem;
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  text-align: center;
  border-radius: 5px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transition 0.3s;
  padding-top: 2rem;
  padding-bottom: 1rem; }
  .streamer-box__icon {
    background-image: linear-gradient(to right, darkgreen, lightgreen);
    display: inline-block;
    -webkit-background-clip: text;
    color: transparent; }
  .streamer-box:hover {
    transform: translateY(-1.5rem) scale(1.1); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.5), rgba(40, 180, 133, 0.5)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 90vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 3rem;
    left: 3rem; }
  .header__logo {
    height: 5rem;
    border-radius: 50%; }
  .header__text-box {
    position: absolute;
    top: 50%;
    /* relative to parent */
    left: 50%;
    transform: translate(-50%, -50%);
    /* shift the text box to the center */
    text-align: center;
    /*
    background-color: red;
    */ }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 *6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( (100% - 2 *6rem) / 3 * 2 + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 *6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( (100% - 3 *6rem) / 4 * 2 + 6rem); }
  .row .col-3-of-4 {
    width: calc( (100% - 3 *6rem) / 4 * 3 + 2 *6rem); }
